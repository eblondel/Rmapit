\name{plot2map}
\Rdversion{1.1}
\alias{plot2map}

\title{plot2map}

\description{\code{plot2map} allows to append plots (graphics, maps, etc) within a map that has been previously created.
For this, the function assumes that you have a spatial object (sp) that gives the locations where the plots should
be drawn. This object could be of any geometry type (point, polygon, line). In addition, the function requires an object
containing the data to be plotted. This object must have a common reference with the sp object, identifying the locations.
Finally, the function requires the user to specify a function that will be used to draw the plot at each location.}

\usage{
plot2map(sp, sp.ref, stat, stat.ref, stat.handler, ratio, pos, offset, pars, box.lty, box.col)
}
\arguments{
\item{sp}{an object of class "spatial" that defines the locations where a plot will be added to the map}

\item{sp.ref}{name of the \code{sp} object column, used as reference to identify each location of the \code{sp} object, e.g. the code/name 
of a sampling station.}

\item{stat}{an object of class "data.frame" or "list", giving the dataset of values that will be used to produce a plot 
at each location of the \code{sp} object.}

\item{stat.ref}{(optional) in case the \code{stat} object is a \code{data.frame}, \code{stat.ref} is the name of the \code{stat} 
column being joined to \code{sp.ref}, in order to associate each plot to generate to its location on the map.}

\item{stat.handler}{a function defined by the user to produce the plot. This function will be then called by \code{plot2map} 
to draw an internal plot at each xy location defined by the \code{sp} object. This function must take as argument an object 
of class "data.frame" which corresponds to a subset of the data.frame object defined in \code{stat} argument.}

\item{ratio}{a numeric value giving the size of each plot in proportion to the size of the plot device. Default value is set 
to 0.1}

\item{pos}{location where the graph generated by \code{stat.handler} should be located relative to the xy coordinate. By default, 
pos is set to "c" (center). The values accepted are defined as follows: "tl" (topleft), "t" (top), "tr" (topright), "l" (left), 
"c" (center), "r" (right), "bl" (bottomleft), "b" (bottom), "br" (bottomright). }

\item{offset}{a numeric value to increase distance of the drawn plot relative to the xy location. Default value is 0. For any 
"center" plot position, the \code{offset} parameter is not applied.}

\item{pars}{optional list of graphical parameters to apply to the internal plot drawn at each xy location.}

\item{box.lty}{line type used for drawing the \code{box("figure")} for each graph inset. Default value is "solid".}

\item{box.col}{line color used for drawing the \code{box("figure")} for each graph inset. Default value is "transparent".}

}

\details{
The \code{sp} argument could point to a \code{SpatialPointsDataFrame} object or any other Spatial object of geometry type other than point. 
In such case, the coordinates used as reference for positioning the plots will be the \code{labpt} slot of the spatial object.

The function \code{plot2map} brings the advantage to let the user define the graph he wants to embedd in the map. In addition, the implementation
allows a close linkage with the spatial plot, which means that inset graphs are binded to the map when the graphic device is resized by the user.

However, the current function has several limitations: its capacity to attach inset graphs to spatial coordinates makes the use of multiple plots 
currently incompatible with \code{plot2map}. For time being, \code{plot2map} can only produce a single main plot.

}

\references{}

\author{Emmanuel Blondel, \email{emmanuel.blondel1@gmail.com}}
\examples{
#use meuse sample data from sp package
require(sp)
data(meuse, package = "sp")
coordinates(meuse) <- c("x","y")
meuse@data <- cbind(meuse@data, code = row.names(meuse))

#generate a random dataset (df) to illustrate graphic drawing on the map
df <- do.call("rbind",
	lapply(unique(as.character(meuse@data$code)),
		function(x){
			as.data.frame(cbind(rep(as.character(x),100),rnorm(1:100)))
		}
	)
)
colnames(df) <- c("ref_code","value")
df$ref_code <- as.character(df$ref_code)
df$value <- as.numeric(as.character(df$value))

#plot handler
myHandler <- function(x){
	hist(as.numeric(x$value), main="",xlab = NULL, ylab=NULL,
		col="cornflowerblue", cex.axis =0.8, cex = 0.5)
}


#plot the locations
plot(meuse[1:10,])

#generate graphs within the map
plot2map(sp = meuse[1:10,], sp.ref = "code",
		stat = df, stat.ref = "ref_code", stat.handler = myHandler,
		ratio = 0.12, box.lty = "dashed", box.col = "orange")

}
